name: tests/unitary/**

on:
  push:
    branches:
      - main
      - 'release/**'
      - develop
    paths:
      - 'ads/**'
      - setup.py
      - '**requirements.txt'
      - '!docs/**'

  pull_request:

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  issues: write

# hack for https://github.com/actions/cache/issues/810#issuecomment-1222550359
env:
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 5

jobs:
  test:
    name: python ${{ matrix.python-version }}, ${{ matrix.name }}
    runs-on: ubuntu-latest
    timeout-minutes: 90

    strategy:
      fail-fast: false
      matrix:
        # python-version: ["3.8", "3.9", "3.10"]
        python-version: ["3.8"]
        # test-path: ["tests/unitary", "tests/unitary/with_extras/model"]
        test-path: ["tests/unitary/default_setup/jobs", "tests/unitary/default_setup/feature_types"]
        include:
          - test-path: "tests/unitary/default_setup/jobs"
            name: "jobs"
          - test-path: "tests/unitary/default_setup/feature_types"
            name: "feature_types"
        # include:
        #   - test-path: "tests/unitary"
        #     ignore-path: "tests/unitary/with_extras/model"
        #     name: "unitary tests"
        #   - test-path: "tests/unitary/with_extras/model"
        #     name: "model tests"

    steps:
      - uses: actions/checkout@v3

      # Caching python libraries installed with pip
      # https://github.com/actions/cache/blob/main/examples.md#python---pip
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Test config setup"
        shell: bash
        env:
          HOME_RUNNER_DIR: /home/runner
        run: |
          set -x # print commands that are executed
          mkdir -p "$HOME_RUNNER_DIR"/.oci
          openssl genrsa -out $HOME_RUNNER_DIR/.oci/oci_ads_user.pem 2048
          cat <<EOT >> "$HOME_RUNNER_DIR/.oci/config"
          [DEFAULT]
          user=ocid1.user.oc1..xxx
          fingerprint=00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00
          tenancy=ocid1.tenancy.oc1..xxx
          region=test_region
          key_file=$HOME_RUNNER_DIR/.oci/oci_ads_user.pem
          EOT
          ls -lha "$HOME_RUNNER_DIR"/.oci
          echo "Test config file:"
          cat $HOME_RUNNER_DIR/.oci/config

      - name: "Test env setup"
        timeout-minutes: 20
        shell: bash
        run: |
          set -x # print commands that are executed
          # sudo apt-get install libkrb5-dev graphviz
          $CONDA/bin/conda init
          source /home/runner/.bashrc
          pip install -r test-requirements.txt

      - name: "Run unitary tests folder with maximum ADS dependencies"
        timeout-minutes: 60
        shell: bash
        env:
          NB_SESSION_COMPARTMENT_OCID: ocid1.compartment.oc1.<unique_ocid>
          CONDA_PREFIX: /usr/share/miniconda
          NoDependency: True
        run: |
          python -m pytest -v -p no:warnings --durations=5 \
          -n auto --dist loadfile \
          --cov= --cov-report=xml \
          ${{ matrix.test-path }} \
          --ignore "${{ matrix.ignore-path }}"
          ls -lha

#       Uploading test artifacts
#       https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts#uploading-build-and-test-artifacts
      - name: "Save coverage files"
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-${{ matrix.name }}
          path: |
            coverage.xml

  coverage-report:
    name: "Coverage report"
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: test
    if: ${{ success() }} && ${{ github.event.issue.pull_request }}
    env:
      COMPARE_BRANCH: main
      BODY: "Coverage diff with `develop` branch: No success to gather report."

    steps:
      - name: "Checkout current branch"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "Download coverage files"
        uses: actions/download-artifact@v3
      - name: "Display structure of downloaded files"
        run: ls -R
      - name: "Calculate coverage diff"
        run: |
          set -x # print commands that are executed
          FILE1="code-coverage-jobs/coverage.xml"; [[ ! -f $FILE1 ]] && FILE1=""
          FILE2="code-coverage-feature_types/coverage.xml"; [[ ! -f $FILE2 ]] && FILE2=""
          pip install diff_cover
          diff-cover --compare-branch=origin/${{ env.COMPARE_BRANCH }} $FILE1 $FILE2
          DIFF=$(diff-cover --compare-branch=origin/${{ env.COMPARE_BRANCH }} $FILE1 $FILE2 | grep Coverage: | cut -d' ' -f 2 | cut -d'%' -f 1)
          if [[ -z $DIFF ]]; then 
            DIFF_INFO=$(diff-cover --compare-branch=origin/${{ env.COMPARE_BRANCH }} $FILE1 $FILE2 | grep "No lines");
            echo BODY="${{ env.BODY_INTRO }} $DIFF_INFO">> $GITHUB_ENV
          else
            if [[ $DIFF < 80 ]]; then COLOR=red; else COLOR=green; fi
            echo BODY="${{ env.BODY_INTRO }} ![Coverage-$DIFF%](https://img.shields.io/badge/coverage-$DIFF%-$COLOR)" >> $GITHUB_ENV
          fi
      - name: "Create comment"
        uses: actions/github-script@v6
        if: always()
        with:
          repo-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ env.BODY }}'
            })
      - name: "Generate html difference report"
        run: |
          diff-cover --compare-branch=origin/main --html-report=coverage-report.html coverage.xml
      - name: "Save coverage difference report"
        uses: actions/upload-artifact@v3
        with:
          name: coverage-diff-html-report
          path: coverage-report.html
          retention-days: 10
