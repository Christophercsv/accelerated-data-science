name: tests/unitary/**

on:
  push:
    branches:
      - main
      - 'release/**'
      - develop
    paths:
      - 'ads/**'
      - setup.py
      - '**requirements.txt'
      - '!docs/**'

  pull_request:

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

# hack for https://github.com/actions/cache/issues/810#issuecomment-1222550359
env:
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 5

jobs:
  test:
    name: python ${{ matrix.python-version }}, ${{ matrix.name }}
    runs-on: ubuntu-latest
    timeout-minutes: 90

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
        test-path: ["tests/unitary", "tests/unitary/with_extras/model"]
        include:
          - test-path: "tests/unitary"
            ignore-path: "tests/unitary/with_extras/model"
            name: "unitary tests"
          - test-path: "tests/unitary/with_extras/model"
            name: "model tests"
          - python-version: "3.8"
            cov: --cov=
            cov-xml-report: --cov-report=xml

    steps:
      - uses: actions/checkout@v3

      # Caching python libraries installed with pip
      # https://github.com/actions/cache/blob/main/examples.md#python---pip
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Test config setup"
        shell: bash
        env:
          HOME_RUNNER_DIR: /home/runner
        run: |
          set -x # print commands that are executed
          mkdir -p "$HOME_RUNNER_DIR"/.oci
          openssl genrsa -out $HOME_RUNNER_DIR/.oci/oci_ads_user.pem 2048
          cat <<EOT >> "$HOME_RUNNER_DIR/.oci/config"
          [DEFAULT]
          user=ocid1.user.oc1..xxx
          fingerprint=00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00
          tenancy=ocid1.tenancy.oc1..xxx
          region=test_region
          key_file=$HOME_RUNNER_DIR/.oci/oci_ads_user.pem
          EOT
          ls -lha "$HOME_RUNNER_DIR"/.oci
          echo "Test config file:"
          cat $HOME_RUNNER_DIR/.oci/config

      - name: "Test env setup"
        timeout-minutes: 20
        shell: bash
        run: |
          set -x # print commands that are executed
          sudo apt-get install libkrb5-dev graphviz
          $CONDA/bin/conda init
          source /home/runner/.bashrc
          pip install -r dev-requirements.txt

      - name: "Run unitary tests folder with maximum ADS dependencies"
        timeout-minutes: 60
        shell: bash
        env:
          NB_SESSION_COMPARTMENT_OCID: ocid1.compartment.oc1.<unique_ocid>
          CONDA_PREFIX: /usr/share/miniconda
          NoDependency: True
        run: |
          python -m pytest -v -p no:warnings --durations=5 \
          -n auto --dist loadfile ${{ matrix.cov }} ${{ matrix.cov-xml-report }} \
          ${{ matrix.test-path }} \
          --ignore "${{ matrix.ignore-path }}"
          ls -lha

#       Uploading test artifacts
#       https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts#uploading-build-and-test-artifacts
      - name: "Save coverage files"
        uses: actions/upload-artifact@v3
        if: ${{ matrix.cov-xml-report }}
        with:
          name: cov-xml-report-${{ matrix.name }}
          path: |
            coverage.xml

  coverage-report:
    name: "Coverage report"
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: test
    if: ${{ success() }} && ${{ github.event.issue.pull_request }}
    env:
      COMPARE_BRANCH: main

    steps:
      - name: "Checkout current branch"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "Download coverage files"
        uses: actions/download-artifact@v3
      - name: "Display structure of downloaded files"
        run: ls -R
      - name: "Calculate coverage diff"
        run: |
          set -x # print commands that are executed
          
          # Prepare default body text 
          BODY_INTRO="Coverage diff with ${{ env.COMPARE_BRANCH }} branch:"
          BODY="$BODY_INTRO No success to gather report."
          
          # Prepare file paths to coverage xml files
          FILE1="cov-xml-report-jobs/coverage.xml"; [[ ! -f $FILE1 ]] && FILE1="" 
          FILE2="cov-xml-report-feature_types/coverage.xml"; [[ ! -f $FILE2 ]] && FILE2=""
          echo "FILE1=$FILE1" >> $GITHUB_ENV
          echo "FILE2=$FILE2" >> $GITHUB_ENV
          
          # Calculate coverage diff and update body message
          pip install diff_cover
          diff-cover $FILE1 $FILE2 --compare-branch=origin/${{ env.COMPARE_BRANCH }} 
          DIFF=$(diff-cover $FILE1 $FILE2 \
          --compare-branch=origin/${{ env.COMPARE_BRANCH }} | grep Coverage: | cut -d' ' -f 2 | cut -d'%' -f 1)
          if [[ -z $DIFF ]]; then 
            DIFF_INFO=$(diff-cover $FILE1 $FILE2 \
          --compare-branch=origin/${{ env.COMPARE_BRANCH }}  | grep "No lines");
            echo BODY="$BODY_INTRO $DIFF_INFO">> $GITHUB_ENV
          else
            if [[ $DIFF < 80 ]]; then COLOR=red; else COLOR=green; fi
            echo BODY="$BODY_INTRO ![Coverage-$DIFF%](https://img.shields.io/badge/coverage-$DIFF%25-$COLOR)" >> $GITHUB_ENV
          fi

      - name: "Add comment with cov diff to PR"
        uses: actions/github-script@v6
        if: always()
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ env.BODY }}'
            })
      - name: "Generate html difference report"
        run: |
          diff-cover ${{ env.FILE1 }} ${{ env.FILE2 }} \
          --compare-branch=origin/${{ env.COMPARE_BRANCH }} \
          --html-report=cov-diff.html
      - name: "Save coverage difference report"
        uses: actions/upload-artifact@v3
        with:
          name: coverage-diff-html-report
          path: cov-diff.html
          retention-days: 10
